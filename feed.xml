<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://minsuan96.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://minsuan96.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-02-21T09:24:27+00:00</updated><id>https://minsuan96.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Planning My Next Project</title><link href="https://minsuan96.github.io/blog/2024/mahjong-rl/" rel="alternate" type="text/html" title="Planning My Next Project"/><published>2024-02-21T00:00:00+00:00</published><updated>2024-02-21T00:00:00+00:00</updated><id>https://minsuan96.github.io/blog/2024/mahjong-rl</id><content type="html" xml:base="https://minsuan96.github.io/blog/2024/mahjong-rl/"><![CDATA[<h4 id="hey-there-happy-chinese-new-year-">Hey there, Happy Chinese New Year! 🎉</h4> <p>So, I just got back from this awesome Chinese New Year bash, and let me tell you, it was a blast! Loads of laughter, heaps of food, and of course, catching up with a bunch of cousins I haven’t seen in ages. But you know what’s cool? A casual chat with one of my cousins sparked an idea that’s now turning into a pretty wild project.</p> <h4 id="the-mahjong-moment-">The Mahjong Moment 🀄</h4> <p>Picture this: we’re knee-deep in a <a href="https://en.wikipedia.org/wiki/Mahjong">mahjong</a> game, having a blast, when out of the blue, my cousin drops, “Hey, why not make an AI that plays mahjong?” Lightbulb moment! So, from a simple family game, my new mission is to create a mahjong-playing AI. How cool is that?</p> <h4 id="reinforcement-learning-vibes-">Reinforcement Learning Vibes 🚀</h4> <p>Now, I’m no expert, but I’ve dabbled in reinforcement learning before – you know, solving games like bipedal walker and acrobot using the <a href="https://gymnasium.farama.org/">gymnasium</a> library. But mahjong is a whole different ball game. Gymnasium is more of a solo player’s arena, and that’s when I stumbled upon <a href="https://pettingzoo.farama.org/">PettingZoo</a>. It’s like gymnasium but for the multiplayer crew.</p> <h4 id="enter-pettingzoo-️">Enter PettingZoo 🕹️</h4> <p>So, PettingZoo is my new playground. My goal? Cook up a custom environment for mahjong and get my agent geared up for some serious training. <a href="https://en.wikipedia.org/wiki/Multi-agent_reinforcement_learning">Multi-agent Reinforcement Learning</a> is the name of the game, and PettingZoo is my partner in crime. Exciting, right?</p> <h4 id="the-end-game-">The End Game 🏆</h4> <p>Now, here’s the kicker – I’m not just looking to make an AI that can play mahjong; I want it to beat the seasoned pros. Yep, you heard that right. My mahjong AI is going to be the new reigning champ, taking down the best in the game. Ambitious? Heck yeah. Achievable? Time will tell.</p> <h4 id="stay-tuned-">Stay Tuned! 🎮</h4> <p>This journey from a family celebration to a full-blown reinforcement learning project is gonna be a rollercoaster. Stick around, because we’re diving into the world of PettingZoo, shaping a mahjong battlefield, and aiming for the stars with an AI that can outsmart even the most seasoned players. It’s casual, it’s fun, and it’s about to get real interesting! 🚀✨</p>]]></content><author><name></name></author><category term="mahjong-rl"/><summary type="html"><![CDATA[Multi-agent Reinforcement Learning for Mahjong]]></summary></entry><entry><title type="html">Gradient Descent with Python</title><link href="https://minsuan96.github.io/blog/2024/gradient-descent/" rel="alternate" type="text/html" title="Gradient Descent with Python"/><published>2024-02-21T00:00:00+00:00</published><updated>2024-02-21T00:00:00+00:00</updated><id>https://minsuan96.github.io/blog/2024/gradient-descent</id><content type="html" xml:base="https://minsuan96.github.io/blog/2024/gradient-descent/"><![CDATA[<p>To include a jupyter notebook in a post, you can use the following code:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{::nomarkdown}
<span class="cp">{%</span><span class="w"> </span><span class="nt">assign</span><span class="w"> </span><span class="nv">jupyter_path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'assets/jupyter/gradient-descent.ipynb'</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="nf">relative_url</span><span class="w"> </span><span class="cp">%}</span>
<span class="cp">{%</span><span class="w"> </span><span class="nt">capture</span><span class="w"> </span><span class="nv">notebook_exists</span><span class="w"> </span><span class="cp">%}{%</span><span class="w"> </span><span class="nt">file_exists</span><span class="w"> </span>assets/jupyter/gradient-descent.ipynb<span class="w"> </span><span class="cp">%}{%</span><span class="w"> </span><span class="nt">endcapture</span><span class="w"> </span><span class="cp">%}</span>
<span class="cp">{%</span><span class="w"> </span><span class="nt">if</span><span class="w"> </span><span class="nv">notebook_exists</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s1">'true'</span><span class="w"> </span><span class="cp">%}</span>
  <span class="cp">{%</span><span class="w"> </span><span class="nt">jupyter_notebook</span><span class="w"> </span><span class="nv">jupyter_path</span><span class="w"> </span><span class="cp">%}</span>
<span class="cp">{%</span><span class="w"> </span><span class="nt">else</span><span class="w"> </span><span class="cp">%}</span>
  &lt;p&gt;Sorry, the notebook you are looking for does not exist.&lt;/p&gt;
<span class="cp">{%</span><span class="w"> </span><span class="nt">endif</span><span class="w"> </span><span class="cp">%}</span>
{:/nomarkdown}
</code></pre></div></div> <p>Let’s break it down: this is possible thanks to <a href="https://github.com/red-data-tools/jekyll-jupyter-notebook">Jekyll Jupyter Notebook plugin</a> that allows you to embed jupyter notebooks in your posts. It basically calls <a href="https://nbconvert.readthedocs.io/en/latest/usage.html#convert-html"><code class="language-plaintext highlighter-rouge">jupyter nbconvert --to html</code></a> to convert the notebook to an html page and then includes it in the post. Since <a href="https://jekyllrb.com/docs/configuration/markdown/">Kramdown</a> is the default Markdown renderer for Jekyll, we need to surround the call to the plugin with the <a href="https://kramdown.gettalong.org/syntax.html#extensions">::nomarkdown</a> tag so that it stops processing this part with Kramdown and outputs the content as-is.</p> <p>The plugin takes as input the path to the notebook, but it assumes the file exists. If you want to check if the file exists before calling the plugin, you can use the <code class="language-plaintext highlighter-rouge">file_exists</code> filter. This avoids getting a 404 error from the plugin and ending up displaying the main page inside of it instead. If the file does not exist, you can output a message to the user. The code displayed above outputs the following:</p> <div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/assets/jupyter/gradient-descent.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div> <p>Note that the jupyter notebook supports both light and dark themes.</p>]]></content><author><name></name></author><category term="Python"/><summary type="html"><![CDATA[A little warm up before my big project.]]></summary></entry></feed>